/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kripto;

import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.MessageDigest;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import kripto.ListaSlika.Renderer;
import kripto.ListaSlika.Slika;

/**
 *
 * @author miroslav.mandic
 */
public class MainForm extends javax.swing.JFrame {
    
    public String getStelectedUSer(){
        return listUsers.getSelectedValue();
    }
    
    public DefaultListModel popuniPoruke(){
        
        DefaultListModel model = new DefaultListModel();
        Set set = Main.NIZ_PORUKA.entrySet();
            Iterator iterator = set.iterator();
            while (iterator.hasNext()) {
                Map.Entry mentry = (Map.Entry) iterator.next();
                if(((Message)mentry.getValue()).getReceiver().equals(Main.KORISNIK.getUsername()))
                {
                    if (new File("src//slike_kriptovane//"+ (String)mentry.getKey() +".png").exists())
                    model.addElement(new Slika((String)mentry.getKey(),
                    new ImageIcon(new ImageIcon("src//slike_kriptovane//"+ (String)mentry.getKey() +".png").getImage()
                            .getScaledInstance(200, 150, java.awt.Image.SCALE_SMOOTH))));
                    else
                        model.addElement(new Slika((String)mentry.getKey(),
                        new ImageIcon(new ImageIcon("src//root//deleted.jpg").getImage()
                            .getScaledInstance(200, 150, java.awt.Image.SCALE_SMOOTH))));
                }
                
            }
            return model;
    }

    public void popuniKorisnike(User user){
        ArrayList<User>  korisnici = new ArrayList<User>(Arrays.asList(Main.KORISNICI));
        korisnici.remove(user);
        DefaultListModel model = new DefaultListModel();
        for (User u : korisnici)
        model.addElement(u.getUsername());
        listUsers.setModel(model);
    }
    
    public MainForm() {
        
        initComponents();
        btnDekript.setEnabled(false);
        popuniKorisnike(Main.KORISNIK);
        //popuniPoruke();
////        DefaultListModel model = new DefaultListModel();
////        
////        Set set = Main.NIZ_PORUKA.entrySet();
////            Iterator iterator = set.iterator();
////            while (iterator.hasNext()) {
////                Map.Entry mentry = (Map.Entry) iterator.next();
////                if(((Message)mentry.getValue()).getReceiver().equals(Main.KORISNIK.getUsername()))
////                model.addElement(new Slika((String)mentry.getKey(),
////                new ImageIcon(new ImageIcon("src//slike_kriptovane//"+ (String)mentry.getKey() +".png").getImage()
////                        .getScaledInstance(200, 150, java.awt.Image.SCALE_SMOOTH))));
////                
//////                System.out.print("key is: " + mentry.getKey() + " & Value is: ");
//////                System.out.println(mentry.getValue());
//            }

        //RENDER IMAGES N TEXT
        listMessage.setCellRenderer(new Renderer());
        listMessage.setModel(popuniPoruke());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listMessage = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        listUsers = new javax.swing.JList<>();
        btnPosaljiPoruku = new javax.swing.JButton();
        btnDekript = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Korisnici");

        listMessage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMessageMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listMessage);

        listUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listUsersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listUsers);

        btnPosaljiPoruku.setText("Posalji Poruku");
        btnPosaljiPoruku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPosaljiPorukuActionPerformed(evt);
            }
        });

        btnDekript.setText("Dekriptuj");
        btnDekript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDekriptActionPerformed(evt);
            }
        });

        jLabel2.setText("Poruke:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(btnPosaljiPoruku))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(477, 477, 477))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(btnDekript)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDekript)
                    .addComponent(btnPosaljiPoruku))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listMessageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMessageMouseClicked
        //Poruka poruka = new Poruka("KLIKNUO SAM", "KLIK", "INFO");
        if(listMessage.getSelectedIndex() != -1){
            btnDekript.setEnabled(true);
            
            
            
//        DefaultListModel model = (DefaultListModel) listMessage.getModel();
//        model.remove(listMessage.getSelectedIndex());
        }
    }//GEN-LAST:event_listMessageMouseClicked

    private void listUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listUsersMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listUsersMouseClicked

    private void btnPosaljiPorukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPosaljiPorukuActionPerformed
        if (listUsers.getSelectedIndex() == -1) {
            new Poruka("Niste izabrali korisnika kome zelite da posaljete poruku", "Warrning", "Warrning");
        }
        else {
            User temp = null;
            for (User u : Main.KORISNICI)
                if(u.getUsername().equalsIgnoreCase(getStelectedUSer()))
                    temp = u;
            if (!temp.getSertifikat().isValidOnDate() || temp.getSertifikat().isRevoked())
                new Poruka("Sertifikat korisnika kome zelite da posaljete poruku je nevazeci!", "Info", "Info");
            else {
            PosaljiPoruku posaljiPoruku = new PosaljiPoruku(this);
            posaljiPoruku.setLocationRelativeTo(null);
            posaljiPoruku.setModal(true);
            posaljiPoruku.setVisible(true);
            }
        }
        
    }//GEN-LAST:event_btnPosaljiPorukuActionPerformed

    private void btnDekriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDekriptActionPerformed
        try {
//            Steganografija asd = new Steganografija();
//            asd.dekodovanje("src//slike_kriptovane//XGaoHuiWu83tSjpi5NFu.png");
            
            Slika sl = (Slika)listMessage.getModel().getElementAt(listMessage.getSelectedIndex());
            
            //System.out.println(sl.getPath());
            //System.out.println(listMessage.getSelectedValue());
            //Set set = Main.NIZ_PORUKA.entrySet();
            Steganografija asd = new Steganografija();
            if(! new File("src//slike_kriptovane//"+sl.getPath()+".png").exists())
                new Poruka("Neko je izbrisao sliku sa fajl sistema.", "INFO", "INFO");
            else{
                Message msg = Main.NIZ_PORUKA.get(sl.getPath());
                
                byte[] hashSlike = Files.readAllBytes(Paths.get("src//slike_kriptovane//"+sl.getPath()+".png"));
                MessageDigest md = MessageDigest.getInstance("SHA-256");
                byte[] hash = md.digest(hashSlike);
                
                if(Arrays.equals(hash, msg.getPictureHash())){                
                String ispis = asd.dekodovanje("src//slike_kriptovane//"+sl.getPath()+".png");
                new Poruka(ispis, "INFO", "INFO");}
                
                else 
                    new Poruka("Neko je zamjenio orginalnu sliku!", "INFO", "INFO");
            }
            
            
            Main.NIZ_PORUKA.remove(sl.getPath());
            try{
            File file = new File("src//slike_kriptovane//"+sl.getPath()+".png");
            file.delete();
            }
            catch(Exception e){e.printStackTrace();}
            
            listMessage.setModel(popuniPoruke());
            btnDekript.setEnabled(false);
                  

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDekriptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new MainForm().setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDekript;
    private javax.swing.JButton btnPosaljiPoruku;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList listMessage;
    private javax.swing.JList<String> listUsers;
    // End of variables declaration//GEN-END:variables
}
